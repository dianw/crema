# GitHub Actions workflow for Crema static site
# This workflow builds the static site, creates a Docker image, pushes to Docker Hub, and deploys to GitHub Pages

name: CI/CD

on:
  push:
    branches:
      - main
  pull_request:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Build application
        run: npm run build
      - name: Generate static site
        run: npm run generate
      - name: Generate static site with PUBLIC_PATH
        run: PUBLIC_PATH=${{ vars.PUBLIC_PATH }} npm run generate
      - name: List generated files
        run: |
          echo "Contents of .output directory:"
          ls -la .output/ || echo ".output directory not found"
          if [ -d ".output" ]; then
            find .output -type f | head -20
          fi
      - name: Prepare Docker artifacts
        if: github.ref == 'refs/heads/main'
        run: |
          mkdir -p docker-artifacts
          cp -r .output docker-artifacts/.output
          cp Dockerfile docker-artifacts/
          cp package*.json docker-artifacts/
      - name: Upload build artifacts for Docker
        if: github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v4
        with:
          name: docker-artifacts
          path: docker-artifacts
          retention-days: 1
      - name: Upload artifact for GitHub Pages
        if: github.ref == 'refs/heads/main'
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./.output/public

  # Docker build and push job
  docker:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-files
          path: ./
      - name: Move artifacts to root
        run: |
          mv docker-artifacts/* ./
          ls -la
          echo "Contents of .output directory:"
          ls -la .output/
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: dianw/crema:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  # GitHub Pages deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
